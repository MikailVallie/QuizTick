{
  "questions": [
    {"questionText": "Which collection class maintains insertion order and allows null keys?", "options": ["HashMap", "LinkedHashMap", "TreeMap", "Hashtable"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "The Java Virtual Machine (JVM) is platform dependent?", "options": ["True", "False"], "correctIndex": 1, "isTrueFalse": true},
    {"questionText": "Which keyword is used to declare a constant in Java?", "options": ["final", "const", "static", "immutable"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "What does the 'synchronized' keyword do?", "options": ["Handles exceptions", "Enables multithreading", "Locks a method/thread", "Creates a subclass"], "correctIndex": 2, "isTrueFalse": false},
    {"questionText": "Abstract classes can be instantiated?", "options": ["True", "False"], "correctIndex": 1, "isTrueFalse": true},
    {"questionText": "Which interface allows a class to be sorted using Collections.sort()?", "options": ["Serializable", "Comparable", "Cloneable", "Iterable"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which exception is thrown when an array index is out of bounds?", "options": ["ArrayIndexOutOfBoundsException", "IndexOutOfRangeException", "NullPointerException", "RuntimeException"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which keyword is used to implement an interface?", "options": ["extends", "implements", "inherits", "interface"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "What is the default value of an object reference in Java?", "options": ["null", "0", "undefined", "empty"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which Java class is used for thread execution?", "options": ["Thread", "Runnable", "Process", "Executor"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which method is called when an object is garbage collected?", "options": ["finalize()", "destroy()", "cleanup()", "delete()"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which access modifier allows access only within the same package?", "options": ["public", "private", "protected", "default"], "correctIndex": 3, "isTrueFalse": false},
    {"questionText": "Which operator is used for bitwise OR?", "options": ["|", "&", "^", "||"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which statement about Java memory is correct?", "options": ["Stack stores objects", "Heap stores local variables", "Heap stores objects", "Stack stores class definitions"], "correctIndex": 2, "isTrueFalse": false},
    {"questionText": "Which method in Object class returns a hash code?", "options": ["hash()", "hashCode()", "getHash()", "code()"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which keyword makes a class immutable?", "options": ["final", "immutable", "static", "const"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which exception occurs when dividing by zero with integers?", "options": ["ArithmeticException", "DivideByZeroException", "NumberFormatException", "IllegalArgumentException"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which interface allows iteration over a collection?", "options": ["Iterator", "Iterable", "Collection", "ListIterator"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Java supports default methods in interfaces?", "options": ["True", "False"], "correctIndex": 0, "isTrueFalse": true},
    {"questionText": "Which keyword is used to prevent inheritance?", "options": ["final", "static", "abstract", "sealed"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which keyword is used to create a custom annotation in Java?", "options": ["@interface", "annotation", "interface", "declare"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which memory area stores class-level information like methods and fields?", "options": ["Heap", "Stack", "Method Area", "Native Stack"], "correctIndex": 2, "isTrueFalse": false},
    {"questionText": "Which garbage collection algorithm uses generations?", "options": ["Mark and Sweep", "Copying", "Generational", "Reference Counting"], "correctIndex": 2, "isTrueFalse": false},
    {"questionText": "Which keyword is used in Java for creating lambda expressions?", "options": ["->", "=>", "lambda", "::"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which method reference syntax is valid in Java?", "options": ["Class::method", "object.method", "method::class", "method->Class"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which design pattern does the Java Singleton class follow?", "options": ["Factory", "Observer", "Singleton", "Builder"], "correctIndex": 2, "isTrueFalse": false},
    {"questionText": "Which Java feature ensures that memory is allocated and deallocated automatically?", "options": ["Pointers", "Garbage Collection", "Manual Free", "Reference Counting"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which exception is unchecked in Java?", "options": ["IOException", "SQLException", "NullPointerException", "ClassNotFoundException"], "correctIndex": 2, "isTrueFalse": false},
    {"questionText": "Which keyword is used in Java to define a generic type?", "options": ["<T>", "generic", "template", "typename"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which Java keyword is used to re-throw an exception?", "options": ["throw", "throws", "rethrow", "raise"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which thread state indicates a thread is waiting for another to complete?", "options": ["WAITING", "BLOCKED", "TIMED_WAITING", "NEW"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which method in Thread class forces a thread to pause execution until another thread finishes?", "options": ["sleep()", "join()", "wait()", "yield()"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which type of inner class does not have a name?", "options": ["Anonymous Inner Class", "Static Inner Class", "Member Inner Class", "Local Inner Class"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which keyword is used to declare a variable that can change values across multiple threads safely?", "options": ["synchronized", "volatile", "transient", "atomic"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which reflection method retrieves all declared methods of a class?", "options": ["getDeclaredMethods()", "getMethods()", "methods()", "getClassMethods()"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which exception is thrown when a class is not found at runtime?", "options": ["NoClassDefFoundError", "ClassNotFoundException", "RuntimeException", "IllegalStateException"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which interface provides a way to execute code asynchronously in Java?", "options": ["Runnable", "Callable", "Future", "ExecutorService"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which Java keyword prevents a variable from being serialized?", "options": ["static", "transient", "final", "volatile"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which functional interface is used in lambda expressions to supply a result?", "options": ["Consumer", "Supplier", "Function", "Predicate"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which class provides utility methods for working with collections?", "options": ["Arrays", "Collections", "Objects", "Utils"], "correctIndex": 1, "isTrueFalse": false},
    {"questionText": "Which annotation indicates a method overrides a superclass method?", "options": ["@Override", "@Inherited", "@Overload", "@Implemented"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which exception occurs if you try to modify an unmodifiable collection?", "options": ["UnsupportedOperationException", "IllegalArgumentException", "ConcurrentModificationException", "RuntimeException"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which class is used for reading formatted input in Java?", "options": ["Scanner", "BufferedReader", "InputStreamReader", "Console"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which stream is used for object serialization?", "options": ["ObjectOutputStream", "DataOutputStream", "PrintStream", "FileWriter"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which keyword is used to indicate that a method may not return normally?", "options": ["throws", "throw", "native", "synchronized"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which method in the Object class creates a shallow copy of an object?", "options": ["clone()", "copy()", "duplicate()", "replicate()"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which collection is best for maintaining unique sorted elements?", "options": ["HashSet", "LinkedHashSet", "TreeSet", "ArrayList"], "correctIndex": 2, "isTrueFalse": false},
    {"questionText": "Which interface must be implemented for custom sorting in Collections.sort()?", "options": ["Comparator", "Comparable", "Iterable", "Sorter"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which annotation is used to suppress compiler warnings?", "options": ["@SuppressWarnings", "@Ignore", "@NoWarning", "@Disable"], "correctIndex": 0, "isTrueFalse": false},
    {"questionText": "Which keyword is used to define a native method in Java?", "options": ["native", "external", "platform", "host"], "correctIndex": 0, "isTrueFalse": false}
  ]
}