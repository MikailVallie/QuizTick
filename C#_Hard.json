[
  {"questionText": "What does the 'async' keyword indicate in C#?", "options": ["Method runs synchronously", "Method can use await", "Method runs on a separate thread", "Method is static"], "correctIndex": 1, "isTrueFalse": false},
  {"questionText": "What is the return type of an async method in C#?", "options": ["Task", "void", "Task<T>", "All of the above"], "correctIndex": 3, "isTrueFalse": false},
  {"questionText": "Which design pattern is implemented by 'IEnumerable' and 'IEnumerator'?", "options": ["Factory", "Observer", "Iterator", "Decorator"], "correctIndex": 2, "isTrueFalse": false},
  {"questionText": "What is covariance in C#?", "options": ["Assigning a base type to a derived type", "Assigning a derived type to a base type", "Changing return type in inheritance", "Overriding a method"], "correctIndex": 1, "isTrueFalse": false},
  {"questionText": "What is contravariance in C#?", "options": ["Assigning a base type to a derived type", "Assigning a derived type to a base type", "Casting between interfaces", "Type erasure"], "correctIndex": 0, "isTrueFalse": false},
  {"questionText": "Which keyword is used to prevent method inlining by JIT?", "options": ["volatile", "MethodImpl", "unsafe", "fixed"], "correctIndex": 1, "isTrueFalse": false},
  {"questionText": "Which of the following is NOT a value type in C#?", "options": ["int", "float", "decimal", "string"], "correctIndex": 3, "isTrueFalse": false},
  {"questionText": "What is the difference between 'ref' and 'out' parameters?", "options": ["ref requires initialization, out does not", "out requires initialization, ref does not", "They are the same", "Neither allows modification"], "correctIndex": 0, "isTrueFalse": false},
  {"questionText": "Which collection is thread-safe in C#?", "options": ["List", "Dictionary", "ConcurrentDictionary", "Array"], "correctIndex": 2, "isTrueFalse": false},
  {"questionText": "Which keyword is used to work with unmanaged code?", "options": ["unsafe", "fixed", "stackalloc", "All of the above"], "correctIndex": 3, "isTrueFalse": false},
  {"questionText": "Which interface must a class implement to support LINQ queries?", "options": ["IEnumerable", "ICollection", "IQueryable", "IEnumerator"], "correctIndex": 0, "isTrueFalse": false},
  {"questionText": "What is the difference between Task.Run() and Task.Factory.StartNew()?", "options": ["They are identical", "StartNew gives more options, Run is simpler", "Run is obsolete", "StartNew is async only"], "correctIndex": 1, "isTrueFalse": false},
  {"questionText": "Which keyword is used to define an iterator method?", "options": ["yield", "return", "iterator", "loop"], "correctIndex": 0, "isTrueFalse": false},
  {"questionText": "What is the size of a decimal in C#?", "options": ["16 bytes", "8 bytes", "4 bytes", "32 bytes"], "correctIndex": 0, "isTrueFalse": false},
  {"questionText": "Which collection maintains insertion order in C#?", "options": ["Dictionary", "List", "Queue", "HashSet"], "correctIndex": 1, "isTrueFalse": false},
  {"questionText": "Which delegate is used for anonymous methods?", "options": ["Func", "Action", "Predicate", "All of the above"], "correctIndex": 3, "isTrueFalse": false},
  {"questionText": "What does 'lock' keyword do in C#?", "options": ["Ensures thread safety", "Locks memory", "Pauses execution", "Prevents inheritance"], "correctIndex": 0, "isTrueFalse": false},
  {"questionText": "Which type of exception is thrown when a null object is accessed?", "options": ["ArgumentException", "NullReferenceException", "InvalidCastException", "OutOfMemoryException"], "correctIndex": 1, "isTrueFalse": false},
  {"questionText": "Which keyword is used to define an indexer in C#?", "options": ["getset", "this", "index", "property"], "correctIndex": 1, "isTrueFalse": false},
  {"questionText": "Which keyword allows multiple methods to be subscribed to an event?", "options": ["event", "delegate", "+=", "override"], "correctIndex": 2, "isTrueFalse": false}
]